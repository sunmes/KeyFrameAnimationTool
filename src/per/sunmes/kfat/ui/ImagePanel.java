/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package per.sunmes.kfat.ui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JFrame;
import per.sunmes.cppe.io.data.MPlist;
import per.sunmes.kfat.sys.SysData;

/**
 *
 * @author Administrator
 */
public class ImagePanel extends javax.swing.JPanel {

    /**
     * Creates new form ImagePanel
     */
    public ImagePanel() {
        initComponents();
    }

    public void loadImage(String imageName) {
        this.imageName = imageName;
        plist = SysData.instance().getPlistOfImage(imageName);
        backImage = SysData.instance().getSrcImageOfName(imageName);
        if (backImage != null) {
            setPreferredSize(new Dimension(backImage.getWidth(), backImage.getHeight()));
        } else {
            System.out.println("getSrcImage:" + imageName + "  Faild..");
        }
        if (plist != null) {
            for (MPlist.Frame f : plist.frames) {
                Rectangle r;
                if (f.rotated) {
                    r = new Rectangle(f.frame[0], f.frame[1], f.sourceSize[1], f.sourceSize[0]);
                } else {
                    r = new Rectangle(f.frame[0], f.frame[1], f.sourceSize[0], f.sourceSize[1]);
                }

                rectangles.add(r);
                rectHit.put(r, f.name);
            }
        }
    }

    String imageName;
    MPlist plist;
    BufferedImage backImage;
    List<Rectangle> rectangles = new ArrayList<>();
    Map<Rectangle, String> rectHit = new HashMap<>();
    Rectangle currentRectangle;

    public JFrame window;

    @Override
    public void paint(Graphics g) {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.
        if (backImage != null) {
            g.drawImage(backImage, 0, 0, this);
        }

        if (currentRectangle != null) {
            g.setColor(Color.red);
            g.drawRect(currentRectangle.x, currentRectangle.y, currentRectangle.width, currentRectangle.height);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 0)));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        for (Rectangle r : rectangles) {
            if (r.contains(evt.getPoint())) {
                currentRectangle = r;
                setToolTipText(rectHit.get(r));
                repaint();
                return;
            }
        }
        currentRectangle = null;
    }//GEN-LAST:event_formMouseMoved

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if (currentRectangle != null) {
            SysData.instance().newPart(rectHit.get(currentRectangle));
        }
        if (window != null) {
            window.dispose();
        }
    }//GEN-LAST:event_formMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
